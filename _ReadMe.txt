Вам выдается исходный код JS + CSS + HTML.
Требуется преобразовать его для выполнения задания (см далее), залить в свой public git репозиторий (init commit),
выполнить (желательно с коммитами в духе task1, task2), и дать на него ссылку.

Overview по файлам:
- GameUnitCardWindowPresenter.js - основной рендер UI окна инфы о юните, основные изменения нужно провести в нем
- Test.js - тесты (выводят в UI), при желании можно менять (хотя может хватить этих), выбранный тест вызывается в OnStartup()
- my.css - доп стили, можно менять
- UnitNames.js - рефакторинг допустим
- index.html + GameUtils.js + SpellNames.js + SpellsConfig.js - файлы проекта, менять/рефакторить НЕ желательно
- каталог bootstrap + jquery - подключенные библиотеки
- каталог _EXPECTED_TEST_RESULTS - Ожидаемые результаты UI (примерные - что касается верстки, точные - что касается наполнения)
- каталог buff_img - иконки для баффов

Глобально задачи следующие:
1) Для юнитов типа Мёртвая графиня (type: "deadcountess")
(еще учесть что в реальной игре типов юнитов много)
в UI должно быть (вместо цифры атаки) "Атака - Заморозка" (и без шанса крита) - см скрин "TestDeadcountess1.png"
+ тестовые данные подготовлены в TestDeadcountess1()

2) Сделать отдельную таблицу - Баффы (расположенную под основным окном)
+ тестовые данные подготовлены в TestArcher2()
в UI должно быть Примерно (!) то что на скрине "TestArcher2.png" (это из реальной игры)
.. графика (иконки) выдается - каталог buff_img, размер 24х24 оставить
.. HTML+CSS задаете сами
.. если нет бафов - то таблица не появляется
.. высота (кол-во строк) - соответствует кол-ву наложенных бафов (макс 4 в один момент, но вариаций бафов 5)
.. текст - использовать spellNames[] + суффикс (см скрин)